@model Capluga.Entities.CursoEnt

@{
    ViewBag.Title = "Actualizar Curso";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main>
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Actualizar Información del Curso</h4>

                @if (ViewBag.MensajeUsuario != null)
                {
                    <div class="alert alert-danger" role="alert" style="text-align:center">
                        @ViewBag.MensajeUsuario
                    </div>
                }

                @using (Html.BeginForm("ActualizarCurso", "MedicalCourses", FormMethod.Post, new { @class = "pt-3", @enctype = "multipart/form-data" }))
                {
                    @Html.HiddenFor(m => m.MedicalCourseID)

                    <div class="form-group">
                        <label>Nombre</label>
                        @Html.TextBoxFor(m => m.Name, new
                        {
                            @class = "form-control form-control-lg",
                            @placeholder = "Nombre",
                            @type = "text"
                        })
                    </div>
                    <div class="form-group">
                        <label>Descripción</label>
                        @Html.TextBoxFor(m => m.Description, new { @class = "form-control form-control-lg", @placeholder = "Descripción", @type = "text" })
                    </div>
                    <div class="form-group">
                        <label>Cantidad</label>
                        @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control form-control-lg", @placeholder = "Cantidad", @type = "number" })
                    </div>
                    <div class="form-group">
                        <label>Precio</label>
                        @Html.TextBoxFor(m => m.Price, new { @class = "form-control form-control-lg", @placeholder = "Precio", @type = "number" })
                    </div>
                    <div class="form-group">
                        <label class="control-label" for="DateandTime">
                            <i class="fas fa-clock"></i> Fecha y Hora
                        </label>
                        <input type="datetime-local" class="form-control" id="DateandTime" name="DateandTime"
                               value="@Model.DateandTime.ToString("yyyy-MM-ddTHH:mm")" />
                        @Html.ValidationMessageFor(m => m.DateandTime, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>Imagen</label>
                        <input type="file" class="form-control" id="ImgCurso" name="ImgCurso">
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" class="btn btn-primary" onclick="confirmUpdate()">
                                 Actualizar
                            </button>

                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
</main>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    function confirmUpdate() {
        Swal.fire({
            title: '¿Está seguro?',
            text: "Seguro de actualizar.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Aceptar!',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                $("form").submit(); // asume que solo hay un formulario en tu página
            }
        });
    }
</script>