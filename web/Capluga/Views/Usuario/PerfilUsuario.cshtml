@model Capluga.Entities.UsuarioEnt

@{
    ViewBag.Title = "PerfilUsuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var ageValue = Model.Age.ToString("yyyy-MM-dd");
}

<div class="content-wrapper d-flex align-items-center auth px-0">
    <div class="row w-100 mx-0">
        <div class="col-lg-4 mx-auto">
            <div class="auth-form-light text-left py-5 px-4 px-sm-5">

                @if (ViewBag.MensajeUsuario != null)
                {
                    <div class="alert alert-danger" role="alert" style="text-align:center">
                        @ViewBag.MensajeUsuario
                    </div>
                }

                <h2>Actualizar Perfil</h2>

                @using (Html.BeginForm("ActualizarUsuario", "Usuario", FormMethod.Post, new { @class = "pt-3" }))
                {
                    @Html.HiddenFor(m => m.UserID)
                    @Html.HiddenFor(m => m.RoleID)

                    <div class="form-group">
                        <label>Nombre</label>
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control form-control-lg", @placeholder = "Nombre", @type = "text" })
                    </div>
                    <div class="form-group">
                        <label>Apellidos</label>
                        @Html.TextBoxFor(m => m.Surnames, new { @class = "form-control form-control-lg", @placeholder = "Apellidos", @type = "text" })
                    </div>
                    <div class="form-group">
                        <label>Correo Electronico</label>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg", @placeholder = "Correo Electronico", @type = "email" })
                    </div>
                    <div class="form-group">
                        <label>Contrasenna</label>
                        @Html.TextBoxFor(m => m.Password, new { @class = "form-control form-control-lg", @placeholder = "Contrasenna", @type = "password" })
                    </div>
                    <div class="form-group">
                        <label>Fecha de nacimiento</label>
                        @Html.TextBoxFor(m => m.Age, new { @class = "form-control form-control-lg", @type = "date", @Value = ageValue })
                    </div>
                    <div class="form-group">
                        <label>Telefono</label>
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control form-control-lg", @placeholder = "Telefono", @type = "text" })
                    </div>
                    <div class="form-group">
                        <label>Provincia</label>
                        @Html.DropDownListFor(m => m.Ubicacion.State, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"),
                       "Seleccione una Provincia", new { @class = "form-control form-control-lg", id = "provincia-dropdown" })

                    </div>
                    <div class="form-group">
                        <label>Caton</label>
                        @Html.DropDownListFor(m => m.Ubicacion.City, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"),
                       "Seleccione un Canton", new { @class = "form-control form-control-lg", id = "canton-dropdown" })
                    </div>
                    <div class="form-group">
                        <label>Distrito</label>
                        @Html.DropDownListFor(m => m.Ubicacion.District, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"),
                       "Seleccione un Distrito", new { @class = "form-control form-control-lg", id = "distrito-dropdown" })
                    </div>
                    <div class="form-group">
                        <label>Codigo Postal</label>
                        @Html.TextBoxFor(m => m.Ubicacion.ZipCode, new { @class = "form-control form-control-lg", @placeholder = "12345", @type = "text", @maxlength = "50" })
                    </div>
                    <div class="form-group">
                        <label>Otras senna</label>
                        @Html.TextBoxFor(m => m.Ubicacion.Street, new { @class = "form-control form-control-lg", @placeholder = "Otras sennas", @type = "text", @maxlength = "50" })
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" class="btn btn-primary" onclick="confirmUpdate()">
                                Actualizar
                            </button>

                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    function confirmUpdate() {
        Swal.fire({
            title: '¿Está seguro?',
            text: "Seguro de actualizar.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Aceptar!',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                $("form").submit(); // asume que solo hay un formulario en tu página
            }
        });
    }
</script>

<script src="/Funcion/Ubicaciones.js"></script>